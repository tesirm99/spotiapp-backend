name: CI

on:
  push: 
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:20-alpine
    env:
      SPOTIFY_TOKEN: ${{ secrets.SPOTIFY_TOKEN }}
      DB_URI: ${{ secrets.DB_URI }}
      SPOTIFY_ID: ${{ secrets.SPOTIFY_ID }}
      SPOTIFY_SECRET: ${{ secrets.SPOTIFY_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install .


  coverage-linting:
    name: Coverage & Linting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'


      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura-coverage.xml
          badge: true
          format: 'markdown'
          output: 'both'
        
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
      
      - name: Save Code Linting Report JSON
        run: npm run lint:json -- --fix
        continue-on-error: true 
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}" 
          report-json: "./coverage/eslint-result.json"

  report:
     runs-on: ubuntu-latest 
     steps:
     - uses: dorny/test-reporter@v1
       with:
         artifact: test-results              
         name: JEST Tests                    
         path: 'test.results.xml'            
         reporter: jest-junit

  push-to-gcr:
    name: Build & Push to GCR
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GCR_DEVOPS_SERVICE_ACCOUNT_KEY }}'
      - name: Building and pushing the image
        uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        with:
          registry: gcr.io
          project_id: ${{ secrets.PROJECT_ID }}
          image_name: spotiapp-backend
          image_tag: latest, ${{ github.sha }}
          dockerfile: ./Dockerfile
          context: ./

      - id: 'compute-ssh'
        uses: 'google-github-actions/ssh-compute@v0'
        with:
          instance_name: 'spotiapp-vm-tf'
          zone: 'europe-west2-a'
          ssh_private_key: '${{ secrets.GCP_SSH_PRIVATE_KEY }}'
          command: 'echo Hello world'